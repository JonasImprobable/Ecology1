// Generated by SpatialOS codegen. DO NOT EDIT!
// Source: improbable/player/player_controls_state.schema
syntax = "proto2";
package schema.improbable.player;

import "improbable/entity_state.proto";
import "improbable/math/vector3d.proto";
import "improbable/util/enums.proto";

message SpawnEnvironmentEventData {
  optional .schema.improbable.util.EnvironmentType environment_type = 1;
  optional .schema.improbable.math.Vector3d position = 2;
}

message SpawnAnimalEventData {
  optional .schema.improbable.util.AnimalType species = 1;
  optional .schema.improbable.math.Vector3d position = 2;
}

message KillEntityEventData {
  optional int64 entity = 1
    [(.schema.improbable.entity_id) = true];
}

message DestroyEntityEventData {
  optional int64 entity = 1
    [(.schema.improbable.entity_id) = true];
}

message MoveEntityEventData {
  optional int64 entity = 1
    [(.schema.improbable.entity_id) = true];
  optional .schema.improbable.math.Vector3d position = 2;
}

message SetMapParametersEventData {
  optional int32 map_size = 1;
  optional float grid_size = 2;
  optional int32 octave_count = 3;
  optional float persistence = 4;
  optional float vegetation_density = 5;
}

message RefreshTerrainEventData {
  optional int32 map_size = 1;
  optional float grid_size = 2;
  optional float vegetation_density = 3;
}

message SpawnAnimalsEventData {
  optional int32 map_size = 1;
  optional float grid_size = 2;
}

message SetAnimalSteeringParametersEventData {
  optional float wander = 1;
  optional float herd = 2;
  optional float follow = 3;
  optional float seek = 4;
  optional float avoid = 5;
}

message PlayerControlsStateData {
  optional .schema.improbable.util.AnimalGender active_animal_gender = 3;
  repeated .schema.improbable.player.SpawnEnvironmentEventData spawn_environment_event = 1000 [(.schema.improbable.state_event) = true];
  repeated .schema.improbable.player.SpawnAnimalEventData spawn_animal_event = 1001 [(.schema.improbable.state_event) = true];
  repeated .schema.improbable.player.KillEntityEventData kill_entity_event = 1002 [(.schema.improbable.state_event) = true];
  repeated .schema.improbable.player.DestroyEntityEventData destroy_entity_event = 1003 [(.schema.improbable.state_event) = true];
  repeated .schema.improbable.player.MoveEntityEventData move_entity_event = 1004 [(.schema.improbable.state_event) = true];
  repeated .schema.improbable.player.SetMapParametersEventData set_map_parameters_event = 1005 [(.schema.improbable.state_event) = true];
  repeated .schema.improbable.player.RefreshTerrainEventData refresh_terrain_event = 1006 [(.schema.improbable.state_event) = true];
  repeated .schema.improbable.player.SpawnAnimalsEventData spawn_animals_event = 1007 [(.schema.improbable.state_event) = true];
  repeated .schema.improbable.player.SetAnimalSteeringParametersEventData set_animal_steering_parameters_event = 1008 [(.schema.improbable.state_event) = true];
}

extend .schema.improbable.EntityState {
  optional .schema.improbable.player.PlayerControlsStateData player_controls_state = 1007;
}
