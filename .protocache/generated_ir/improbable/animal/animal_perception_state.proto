// Generated by SpatialOS codegen. DO NOT EDIT!
// Source: improbable/animal/animal_perception_state.schema
syntax = "proto2";
package schema.improbable.animal;

import "improbable/entity_state.proto";
import "improbable/math/vector3d.proto";
import "improbable/util/enums.proto";

message PerceivedEnvironmentInfo {
  optional int64 entity_id = 1
    [(.schema.improbable.entity_id) = true];
  optional .schema.improbable.math.Vector3d position = 2;
  optional .schema.improbable.util.EnvironmentType environment_type = 3;
  optional float resources = 4;
  optional bool traversable = 5;
}

message PerceivedAnimalInfo {
  optional int64 entity_id = 1
    [(.schema.improbable.entity_id) = true];
  optional .schema.improbable.math.Vector3d position = 2;
  optional .schema.improbable.math.Vector3d velocity = 3;
  optional .schema.improbable.util.AnimalType species = 4;
  optional .schema.improbable.util.AnimalGender gender = 5;
  optional .schema.improbable.util.AnimalState state = 6;
  optional .schema.improbable.util.AnimalVitalityStatus is_alive = 7;
  optional bool is_adult = 8;
  optional bool is_pregnant = 9;
  optional float priority = 10;
}

message AnimalPerceptionStateData {
  map<int64, .schema.improbable.animal.PerceivedEnvironmentInfo> perceived_environment_entities = 1
    [(.schema.improbable.entity_id_key) = true];
  map<int64, .schema.improbable.animal.PerceivedAnimalInfo> perceived_animals = 2
    [(.schema.improbable.entity_id_key) = true];
}

extend .schema.improbable.EntityState {
  optional .schema.improbable.animal.AnimalPerceptionStateData animal_perception_state = 1005;
}
